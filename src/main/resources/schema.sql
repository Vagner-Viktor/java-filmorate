drop table IF EXISTS "friends" CASCADE;
drop table IF EXISTS "likes" CASCADE;
drop table IF EXISTS "users" CASCADE;
drop table IF EXISTS "films_genre" CASCADE;
drop table IF EXISTS "genres" CASCADE;
drop table IF EXISTS "films" CASCADE;
drop table IF EXISTS "mpas" CASCADE;
drop table IF EXISTS "friendship_status" CASCADE;
drop table IF EXISTS "films_director" CASCADE;
drop table IF EXISTS "directors" CASCADE;
drop table IF EXISTS "user_events" CASCADE;
drop table IF EXISTS "event_types" CASCADE;
drop table IF EXISTS "operation_types" CASCADE;
drop table IF EXISTS "usabilitys" CASCADE;
drop table IF EXISTS "reviews" CASCADE;
drop table IF EXISTS "usability_reviews" CASCADE;

create TABLE IF NOT EXISTS "users" (
  "user_id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "email" varchar NOT NULL,
  "login" varchar,
  "username" varchar,
  "birthday" date
);

create TABLE IF NOT EXISTS "friends" (
  "user_id" bigint NOT NULL,
  "friend_id" bigint NOT NULL,
  "friendship_status_id" int,
  PRIMARY KEY ("user_id", "friend_id")
);

create TABLE IF NOT EXISTS "friendship_status" (
  "friendship_status_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "status" varchar
);

create TABLE IF NOT EXISTS "films" (
  "film_id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar,
  "description" varchar,
  "release_date" date,
  "duration" int,
  "mpa_id" int
);

create TABLE IF NOT EXISTS "mpas" (
  "mpa_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "mpa" varchar
);

create TABLE IF NOT EXISTS "likes" (
  "film_id" bigint NOT NULL,
  "user_id" bigint NOT NULL,
  PRIMARY KEY ("film_id", "user_id")
);

create TABLE IF NOT EXISTS "films_genre" (
  "film_id" bigint NOT NULL,
  "genre_id" int NOT NULL,
  PRIMARY KEY ("film_id", "genre_id")
);

create TABLE IF NOT EXISTS "genres" (
  "genre_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "genre" varchar
);

create TABLE IF NOT EXISTS "user_events" (
  "user_event_id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "timestamp" bigint,
  "user_id" bigint,
  "entity_id" bigint,
  "event_type_id" int,
  "operation_type_id" int
);

create TABLE IF NOT EXISTS "event_types" (
  "event_type_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar
);

create TABLE IF NOT EXISTS "operation_types" (
  "operation_type_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar
);

create TABLE IF NOT EXISTS "films_director" (
  "film_id" bigint NOT NULL,
  "director_id" BIGINT NOT NULL,
  PRIMARY KEY ("film_id", "director_id")
);

create TABLE IF NOT EXISTS "directors" (
  "director_id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar
);

create TABLE IF NOT EXISTS "usabilitys" (
    "usability_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "usability" VARCHAR UNIQUE NOT NULL,
    "weigh" INTEGER NOT NULL
);

create TABLE IF NOT EXISTS "reviews" (
    "review_id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "film_id" BIGINT NOT NULL REFERENCES "films" ("film_id") ON delete CASCADE,
    "user_id" BIGINT NOT NULL REFERENCES "users" ("user_id") ON delete CASCADE,  -- автор отзыва
    "content" VARCHAR,
    "is_positive" BOOLEAN
);

create TABLE IF NOT EXISTS "usability_reviews" (
    "usability_review_id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "user_id" BIGINT NOT NULL REFERENCES "users" ("user_id") ON delete CASCADE,  -- оценщик отзыва
    "review_id" BIGINT NOT NULL REFERENCES "reviews" ("review_id") ON delete CASCADE,
    "usability_id" INT REFERENCES "usabilitys" ("usability_id") ON delete CASCADE,
    UNIQUE ("review_id", "user_id")
);

alter table "friends" add FOREIGN KEY ("friendship_status_id") REFERENCES "friendship_status" ("friendship_status_id");

alter table "friends" add FOREIGN KEY ("user_id") REFERENCES "users" ("user_id") ON delete CASCADE;

alter table "friends" add FOREIGN KEY ("friend_id") REFERENCES "users" ("user_id") ON delete CASCADE;

alter table "films" add FOREIGN KEY ("mpa_id") REFERENCES "mpas" ("mpa_id");

alter table "likes" add FOREIGN KEY ("film_id") REFERENCES "films" ("film_id") ON delete CASCADE;

alter table "likes" add FOREIGN KEY ("user_id") REFERENCES "users" ("user_id") ON delete CASCADE;

alter table "films_genre" add FOREIGN KEY ("film_id") REFERENCES "films" ("film_id") ON delete CASCADE;

alter table "films_genre" add FOREIGN KEY ("genre_id") REFERENCES "genres" ("genre_id");

alter table "user_events" add FOREIGN KEY ("event_type_id") REFERENCES "event_types" ("event_type_id");

alter table "user_events" add FOREIGN KEY ("operation_type_id") REFERENCES "operation_types" ("operation_type_id");

alter table "films_director" add FOREIGN KEY ("film_id") REFERENCES "films" ("film_id") ON delete CASCADE;

alter table "films_director" add FOREIGN KEY ("director_id") REFERENCES "directors" ("director_id") ON delete CASCADE;